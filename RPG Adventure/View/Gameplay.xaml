<UserControl x:Name="RPG_Adventure" x:Class="RPG_Adventure.Gameplay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RPG_Adventure"
        mc:Ignorable="d">
    <UserControl.Resources>
        <ImageBrush x:Key="ButtonArrowLeft" ImageSource="/Images/arrow-left-grey.png"></ImageBrush>
        <ImageBrush x:Key="ButtonArrowRight" ImageSource="/Images/arrow-right-grey.png"></ImageBrush>
        <ImageBrush x:Key="IdentityIcon" ImageSource="/Images/Icons/identify-icon.png"></ImageBrush>
        <ImageBrush x:Key="DeleteIcon" ImageSource="/Images/Icons/destroy-icon.png"></ImageBrush>
        <ImageBrush x:Key="RepairIcon" ImageSource="/Images/Icons/repair-icon.png"></ImageBrush>
        <ImageBrush x:Key="BackButtonIcon" ImageSource="/Images/back-button.png"></ImageBrush>
               
        <Style TargetType="Button" x:Key="ArrowButtonLeft">
            <Setter Property="Width" Value="75"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource ButtonArrowLeft}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/arrow-left-grey-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ArrowButtonRight">
            <Setter Property="Width" Value="75"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource ButtonArrowRight}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Height" Value="27"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/arrow-right-grey-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="IdentifyIcon">
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource IdentityIcon}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/Icons/identify-icon-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="DeletionIcon">
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource DeleteIcon}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/Icons/destroy-icon-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ReperationIcon">
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource RepairIcon}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/Icons/repair-icon-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="Button" x:Key="BackButton">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource BackButtonIcon}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/back-button-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Height="720" Width="925">
        <Label x:Name="lblName" HorizontalContentAlignment="Center" Content="" Width="336" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15" FontFamily="Open Sans Semibold" Foreground="White" FontSize="10.667">
            <Label.Background>
                <ImageBrush ImageSource="/Images/name-label.png" />
            </Label.Background>
        </Label>
        <DockPanel Margin="0 25">
            <Grid Width="335" Height="561" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15 20">
                
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Width="335" Height="195" Margin="0">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/Images/stat-grid-bg-small.jpg" />
                    </StackPanel.Background>
                    <Label Content="Hit Points:" Foreground="White" FontFamily="Open Sans Semibold" Padding="50 10 0 0" Width="283" Height="35" Margin="0 15 0 5">
                        <Label.Background>
                            <ImageBrush ImageSource="/Images/stat-label-bg.png" />
                        </Label.Background>
                    </Label>
                    <Label Content="Gold:" Foreground="White" FontFamily="Open Sans Semibold" Padding="50 10 0 0" Width="283" Height="35" Margin="0 0 0 5">
                        <Label.Background>
                            <ImageBrush ImageSource="/Images/stat-label-bg.png" />
                        </Label.Background>
                    </Label>
                    <Label Content="Experience:" Foreground="White" FontFamily="Open Sans Semibold" Padding="50 10 0 0" Width="283" Height="35" Margin="0 0 0 5">
                        <Label.Background>
                            <ImageBrush ImageSource="/Images/stat-label-bg.png" />
                        </Label.Background>
                    </Label>
                    <Label Content="Level:" Foreground="White" FontFamily="Open Sans Semibold" Padding="50 10 0 0" Width="283" Height="35" Margin="0 0 0 5">
                        <Label.Background>
                            <ImageBrush ImageSource="/Images/stat-label-bg.png" />
                        </Label.Background>
                    </Label>
                </StackPanel>
                
                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Width="150" Height="195"  x:Name="StatWindow">
                    <Label x:Name="lblHitPoints" Content="" MaxWidth="100" Foreground="White" Padding="0 10 0 0" Height="35" Margin="0 15 0 5"/>
                    <Label x:Name="lblGold" Content="" MaxWidth="100" Foreground="White" Padding="0 10 0 0" Height="35" Margin="0 0 0 5"/>
                    <Label x:Name="lblExperience" Content="" MaxWidth="100" Foreground="White" Padding="0 10 0 0" Height="35" Margin="0 0 0 5"/>
                    <Label x:Name="lblLevel" Content="" MaxWidth="100" Foreground="White" Padding="0 10 0 0" Height="35" Margin="0 0 0 5"/>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="335" Height="361" x:Name="InventoryWindow">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/Images/inventory-bg.jpg" />
                    </StackPanel.Background>
                    <DockPanel Height="361">
                        <Button x:Name="btnPrevInventoryPage" Style="{StaticResource ArrowButtonLeft}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="20"/>
                        <Button x:Name="deleteButton" Style="{StaticResource DeletionIcon}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="-20 0 0 70" />
                        <Button x:Name="identifyButton" Style="{StaticResource IdentifyIcon}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="20 0 0 70"/>
                        <Button x:Name="repairButton" Style="{StaticResource ReperationIcon}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="20 0 0 70" Click="repairButton_Click" />
                        <Button x:Name="btnNextInventoryPage" Style="{StaticResource ArrowButtonRight}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="-6 20 0 20"/>
                    </DockPanel>
                </StackPanel>
                
            </Grid>
        </DockPanel>
        <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Width="200" Height="200" Margin="10 0 100 10" Visibility="Hidden" x:Name="testWindow">
            <Grid.Background>
                <ImageBrush ImageSource="/Images/bg.jpg" />
            </Grid.Background>
            <Button Width="50" Height="25" Content="Hejsa"></Button>
        </Grid>
        <Button x:Name="btnMainMenu" Style="{StaticResource BackButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10" Click="mainMenu_Click"/>
    </Grid>
</UserControl>
