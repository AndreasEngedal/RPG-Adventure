<UserControl x:Name="RPG_Adventure" x:Class="RPG_Adventure.Gameplay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RPG_Adventure"
        mc:Ignorable="d">
    <UserControl.Resources>
        <ImageBrush x:Key="ButtonArrowLeft" ImageSource="/Images/arrow-left-grey.png"></ImageBrush>
        <ImageBrush x:Key="ButtonArrowRight" ImageSource="/Images/arrow-right-grey.png"></ImageBrush>
        <ImageBrush x:Key="IdentityIcon" ImageSource="/Images/Icons/identify-icon.png"></ImageBrush>
        <ImageBrush x:Key="DeleteIcon" ImageSource="/Images/Icons/destroy-icon.png"></ImageBrush>
        <ImageBrush x:Key="RepairIcon" ImageSource="/Images/Icons/repair-icon.png"></ImageBrush>
        <ImageBrush x:Key="BackButtonIcon" ImageSource="/Images/back-button.png"></ImageBrush>

        <Style TargetType="Button" x:Key="ArrowButtonLeft">
            <Setter Property="Width" Value="75"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource ButtonArrowLeft}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/arrow-left-grey-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ArrowButtonRight">
            <Setter Property="Width" Value="75"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource ButtonArrowRight}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Height" Value="27"/>
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/arrow-right-grey-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="IdentifyIcon">
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource IdentityIcon}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/Icons/identify-icon-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="DeletionIcon">
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource DeleteIcon}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/Icons/destroy-icon-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ReperationIcon">
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource RepairIcon}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/Icons/repair-icon-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="BackButton">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource BackButtonIcon}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <ImageBrush ImageSource="/Images/back-button-hover.png" />
                                    </Setter.Value>
                                </Setter>
                                <!-- If we don't tell the background to change on hover, it will remain the same -->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Height="720" Width="925">
        <Label x:Name="lblName" HorizontalContentAlignment="Center" Content="" Width="336" Height="25" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15" FontFamily="Open Sans Semibold" Foreground="White" FontSize="10.667">
            <Label.Background>
                <ImageBrush ImageSource="/Images/name-label.png" />
            </Label.Background>
        </Label>
        <DockPanel Margin="0 25">
            <Grid Width="335" Height="640" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="15,20,15,0">
                <StackPanel HorizontalAlignment="Left" Width="335" Margin="0,0,0,445">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/Images/stat-grid-bg-small.jpg" />
                    </StackPanel.Background>
                    <Label Content="Hit Points:" Foreground="White" FontFamily="Open Sans Semibold" Padding="50 10 0 0" Width="283" Height="35" Margin="0 15 0 5">
                        <Label.Background>
                            <ImageBrush ImageSource="/Images/stat-label-bg.png" />
                        </Label.Background>
                    </Label>
                    <Label Content="Gold:" Foreground="White" FontFamily="Open Sans Semibold" Padding="50 10 0 0" Width="283" Height="35" Margin="0 0 0 5">
                        <Label.Background>
                            <ImageBrush ImageSource="/Images/stat-label-bg.png" />
                        </Label.Background>
                    </Label>
                    <Label Content="Experience:" Foreground="White" FontFamily="Open Sans Semibold" Padding="50 10 0 0" Width="283" Height="35" Margin="0 0 0 5">
                        <Label.Background>
                            <ImageBrush ImageSource="/Images/stat-label-bg.png" />
                        </Label.Background>
                    </Label>
                    <Label Content="Level:" Foreground="White" FontFamily="Open Sans Semibold" Padding="50 10 0 0" Width="283" Height="35" Margin="0 0 0 5">
                        <Label.Background>
                            <ImageBrush ImageSource="/Images/stat-label-bg.png" />
                        </Label.Background>
                    </Label>
                </StackPanel>

                <StackPanel HorizontalAlignment="Right" VerticalAlignment="Top" Width="150" Height="195"  x:Name="StatWindow">
                    <Label x:Name="lblHitPoints" Content="" MaxWidth="100" Foreground="White" Padding="0 10 0 0" Height="35" Margin="0 15 0 5"/>
                    <Label x:Name="lblGold" Content="" MaxWidth="100" Foreground="White" Padding="0 10 0 0" Height="35" Margin="0 0 0 5"/>
                    <Label x:Name="lblExperience" Content="" MaxWidth="100" Foreground="White" Padding="0 10 0 0" Height="35" Margin="0 0 0 5"/>
                    <Label x:Name="lblLevel" Content="" MaxWidth="100" Foreground="White" Padding="0 10 0 0" Height="35" Margin="0 0 0 5"/>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left" Width="335" x:Name="InventoryWindow" Margin="0,200,0,80">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/Images/inventory-bg.jpg" />
                    </StackPanel.Background>
                    <DockPanel Height="200">
                        <DataGrid x:Name="dgvInventory" Height="200" Width="305" VerticalAlignment="Top" Background="Transparent" Margin="15" HeadersVisibility="None" RowBackground="{DynamicResource RepairIcon}" IsReadOnly="True" IsEnabled="False"/>
                    </DockPanel>
                    <DockPanel Height="160">
                        <Button x:Name="btnPrevInventoryPage" Style="{StaticResource ArrowButtonLeft}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="20"/>
                        <Button x:Name="deleteButton" Style="{StaticResource DeletionIcon}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="-20 0 0 70" />
                        <Button x:Name="identifyButton" Style="{StaticResource IdentifyIcon}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="20 0 0 70"/>
                        <Button x:Name="repairButton" Style="{StaticResource ReperationIcon}" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="20 0 0 70" Click="repairButton_Click" />
                        <Button x:Name="btnNextInventoryPage" Style="{StaticResource ArrowButtonRight}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="-6 20 0 20"/>
                    </DockPanel>
                </StackPanel>

                <StackPanel HorizontalAlignment="Left" Width="335" x:Name="ButtonWindow" Margin="0,565,0,-25" Height="95" VerticalAlignment="Top">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/Images/stat-grid-bg-small.jpg" />
                    </StackPanel.Background>
                    <DockPanel Height="95">

                    </DockPanel>
                </StackPanel>
            </Grid>
            <Grid>
                <StackPanel x:Name="MapWindow" Margin="-10,-10,10,210">
                    <StackPanel.Background>
                        <ImageBrush ImageSource="/Images/bg.jpg" />
                    </StackPanel.Background>
                    <DockPanel Height="470">
                        <RichTextBox x:Name="rtbLocation" Height="50" Width="200" Foreground="White" VerticalAlignment="Top" Margin="10" BorderThickness="0" IsReadOnly="True" FontFamily="/RPG Adventure;component/Images/#Diablo" Padding="0 15" FontSize="15">
                            <RichTextBox.Background>
                                <ImageBrush ImageSource="/Images/bg.jpg" />
                            </RichTextBox.Background>
                            <FlowDocument TextAlignment="Center">
                                <Paragraph>
                                    <Run Text="Location"/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </DockPanel>
                </StackPanel>
                <StackPanel x:Name="InformationWindow"  Margin="-10,465,10,90">
                    <DockPanel Height="115">
                        <RichTextBox x:Name="rtbInformation" Height="115" Background="#FF16204B" Foreground="White" IsReadOnly="True">
                            <FlowDocument>
                                <Paragraph>
                                    <Run Text="Information window..."/>
                                </Paragraph>
                            </FlowDocument>
                        </RichTextBox>
                    </DockPanel>
                </StackPanel>
                <StackPanel x:Name="ActionWindow" Height="95"  Margin="-10,585,10,-25" VerticalAlignment="Top" Background="#FF16204B" >
                    <DockPanel Height="95">
                        <Button x:Name="btnNorth" Content="North" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="75" Margin="50 10 0 0" Click="btnNorth_Click"/>
                        <Button x:Name="btnWest" Content="West" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="75" Margin="-115 37 0 0" Click="btnWest_Click"/>
                        <Button x:Name="btnEast" Content="East" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="75" Margin="-30 37 0 0" Click="btnEast_Click"/>
                        <Button x:Name="btnSouth" Content="South" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="75" Margin="-120 65 0 0" Click="btnSouth_Click"/>
                    </DockPanel>
                </StackPanel>
            </Grid>
        </DockPanel>
        <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Width="200" Height="200" Margin="10 0 100 10" Visibility="Hidden" x:Name="testWindow">
            <Grid.Background>
                <ImageBrush ImageSource="/Images/bg.jpg" />
            </Grid.Background>
            <DockPanel Height="200">
                <DataGrid x:Name="dgvQuests" Height="200" Width="200" VerticalAlignment="Top" Background="Transparent" Margin="15" HeadersVisibility="None" IsEnabled="False" IsReadOnly="True"/>
            </DockPanel>
        </Grid>
        <Button x:Name="btnMainMenu" Style="{StaticResource BackButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="15 20" Click="mainMenu_Click"/>
        <RichTextBox x:Name="richTextBox" HorizontalAlignment="Left" Height="100" Margin="1053,317,-228,0" VerticalAlignment="Top" Width="100">
            <FlowDocument>
                <Paragraph>
                    <Run Text="RichTextBox"/>
                </Paragraph>
            </FlowDocument>
        </RichTextBox>
    </Grid>
</UserControl>
